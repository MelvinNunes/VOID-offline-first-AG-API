// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  MANAGER
  USER
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  role      Role
  profile   Profile?
  products  Product[]
  createdAt DateTime  @map("created_at") @db.Timestamp()
  updatedAt DateTime  @map("updated_at") @db.Timestamp()

  @@map("users")
}

model Profile {
  id          Int     @id @default(autoincrement())
  userId      String  @unique
  user        User    @relation(fields: [userId], references: [id])
  firstName   String  @map("first_name")
  lastName    String  @map("last_name")
  phoneNumber String? @map("phone_number")

  @@map("profiles")
}

enum ProductType {
  SIMPLE
  COMPOSITE
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String
  price       Float
  quantity    Int
  userId      String
  createdBy   User        @relation(fields: [userId], references: [id])
  type        ProductType
  components  Component[]
  usedIn      Component[] @relation("ProductToComponent")

  createdAt DateTime @map("created_at") @db.Timestamp()
  updatedAt DateTime @map("updated_at") @db.Timestamp()

  @@map("products")
}

model Component {
  id          String   @id @default(uuid())
  quantity    Int
  compositeId String
  composite   Product  @relation(fields: [compositeId], references: [id])
  productId   String
  product     Product  @relation("ProductToComponent", fields: [productId], references: [id])
  createdAt   DateTime @map("created_at") @db.Timestamp()
  updatedAt   DateTime @map("updated_at") @db.Timestamp()

  @@unique([compositeId, productId])
  @@map("components")
}
